{"version":3,"file":"static/js/551.5c07bb1a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/index.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/index.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/index.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/index.js","components/Filter/Filter.jsx","components/pages/ContactsPage/ContactsPage.styled.jsx","components/pages/ContactsPage/index.js","components/pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 480px;\n  padding: 24px;\n\n  border: 1px solid black;\n  border-radius: 16px;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 24px;\n  margin-bottom: 8px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 8px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  font-size: 20px;\n`;\n\nexport const FormButton = styled.button`\n  padding: 8px;\n  border-radius: 16px;\n\n  :hover,\n  :focus {\n    background-color: blue;\n    color: white;\n  }\n\n  :active {\n    box-shadow: 3px 3px 10px 2px #000000;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectLoadingStatus = state => state.contacts.isLoading;\n\nexport const selectErrorStatus = state => state.contacts.error;\n","import ContactForm from './ContactForm';\n\nexport default ContactForm;\n","import { useState } from 'react';\nimport {\n  ContactFormWrapper,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { createContact } from 'redux/contacts/operation';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const addContact = contact => dispatch(createContact(contact));\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        console.error(`Name - ${name} is not defined`);\n    }\n  };\n\n  const onAddToContactSubmit = e => {\n    e.preventDefault();\n\n    if (contacts.some(contact => contact.name === name)) alertmessage(name);\n    else addContact({ name, phone: number });\n\n    setName('');\n    setNumber('');\n  };\n\n  const alertmessage = name => alert(`${name} is already in contacts`);\n\n  return (\n    <ContactFormWrapper onSubmit={onAddToContactSubmit}>\n      <FormLabel htmlFor=\"name\">Name</FormLabel>\n      <FormInput\n        type=\"text\"\n        id=\"name\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        value={name}\n      />\n      <FormLabel htmlFor=\"tel\">Number</FormLabel>\n      <FormInput\n        type=\"tel\"\n        id=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        value={number}\n      />\n      <FormButton type=\"submit\">Add to contact</FormButton>\n    </ContactFormWrapper>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Contact = styled.li`\n  margin-bottom: 4px;\n`;\n\nexport const ContactBtn = styled.button`\n  margin-left: 12px;\n  font-size: 16px;\n  font-weight: 700;\n  padding: 6px 12px;\n  border-radius: 8px;\n  border: 2px solid black;\n\n  :hover,\n  :focus {\n    background-color: blue;\n    color: white;\n  }\n\n  :active {\n    box-shadow: 3px 3px 10px 2px #000000;\n  }\n`;\n","import { ContactItem } from './ContactItem';\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport { Contact, ContactBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ name, id, number, removeContact }) => (\n  <Contact name=\"contact\">\n    {name}: {number}\n    <ContactBtn type=\"button\" onClick={() => removeContact(id)} id={id}>\n      Delete\n    </ContactBtn>\n  </Contact>\n);\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeContact: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Contacts = styled.ul`\n  font-size: 24px;\n`;\n","import { ContactList } from './ContactList';\n\nexport default ContactList;\n","import ContactItem from 'components/ContactItem';\nimport { Contacts } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectErrorStatus,\n  selectFilter,\n  selectLoadingStatus,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operation';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectErrorStatus);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const removeContact = id => dispatch(deleteContact(id));\n\n  const getFilterNormalize = () => filter.toLowerCase();\n\n  const getFilteredContacts = () =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(getFilterNormalize())\n    );\n\n  return (\n    <Contacts>\n      {(isLoading && !error && <b>Request in progress...</b>) ||\n        (error && <b>{error}</b>) ||\n        getFilteredContacts().map(({ id, name, phone }) => (\n          <ContactItem\n            name={name}\n            key={id}\n            id={id}\n            number={phone}\n            removeContact={removeContact}\n          />\n        ))}\n    </Contacts>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 16px;\n  padding: 4px;\n  margin-left: 8px;\n  border-radius: 8px;\n`;\n","import { Filter } from './Filter';\n\nexport default Filter;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <div>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        id=\"filter\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin: 24px;\n`;\n\nexport const ListTitle = styled.h2`\n  font-size: 28px;\n`;\n","import ContactsPage from './ContactsPage';\n\nexport default ContactsPage;\n","import ContactForm from '../../ContactForm';\nimport ContactList from '../../ContactList';\nimport Filter from 'components/Filter';\nimport { ListTitle, Wrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <ListTitle>Contacts</ListTitle>\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactFormWrapper","styled","FormLabel","FormInput","FormButton","selectContacts","state","contacts","items","selectFilter","filter","selectLoadingStatus","isLoading","selectErrorStatus","error","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","target","value","console","alertmessage","alert","onSubmit","e","contact","preventDefault","some","phone","createContact","htmlFor","type","id","pattern","title","required","onChange","Contact","ContactBtn","removeContact","onClick","Contacts","useEffect","fetchContacts","deleteContact","toLowerCase","includes","map","FilterLabel","FilterInput","changeFilter","Wrapper","ListTitle"],"sourceRoot":""}